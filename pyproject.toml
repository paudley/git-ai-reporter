[project]
name = "git-ai-reporter"
version = "0.1.0"
description = "AI-Driven Git Repository Analysis and Narrative Generation."
readme = "README.md"
license = { text = "MIT" }  # SPDX-License-Identifier: MIT
authors = [
		{ name = "Blackcat InformaticsÂ® Inc.", email = "paudley@blackcat.ca" }
]
maintainers = [
		{ name = "Patrick Audley", email = "paudley@blackcat.ca" }
]
requires-python = ">=3.12"
classifiers = [
		"Development Status :: 4 - Beta",
		"Intended Audience :: Developers",
		"License :: OSI Approved :: MIT License",
		"Operating System :: OS Independent",
		"Programming Language :: Python :: 3 :: Only",
		"Programming Language :: Python :: 3.12",
		"Programming Language :: Python :: 3.13",
		"Topic :: Software Development :: Version Control :: Git",
		"Topic :: Software Development :: Documentation",
		"Topic :: Text Processing :: Linguistic",
		"Typing :: Typed",
]
keywords = ["git", "changelog", "release-notes", "ai", "gemini", "documentation"]

dependencies = [
		"aiofiles>=23.2.1",
		"gitpython>=3.1.45",
		"google-genai>=1.28.0",
		"httpx>=0.27.0",
		"json-repair>=0.14.0",
		"pydantic-settings>=2.10.1",
		"pydantic>=2.0.0",
		"python-dotenv>=1.1.1",
		"rich>=14.1.0",
		"tenacity>=8.5.0",
		"tolerantjson>=1.0.0",
		"typer>=0.16.0",
]

[project.urls]
Homepage = "https://github.com/paudley/git-ai-reporter"
Repository = "https://github.com/paudley/git-ai-reporter.git"
Issues = "https://github.com/paudley/git-ai-reporter/issues"
Documentation = "https://paudley.github.io/git-ai-reporter/"
Changelog = "https://paudley.github.io/git-ai-reporter/about/changelog/"

[project.scripts]
git-ai-reporter = "git_ai_reporter.cli:APP"

[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/git_ai_reporter/__init__.py"

[tool.hatch.build]
include = [
		"src/git_ai_reporter",
		"README.md",
		"LICENSE",
		"NOTICE",
		"pyproject.toml",
]
exclude = [
		"*.pyc",
		"__pycache__",
		".git",
		".pytest_cache",
		".mypy_cache",
		".ruff_cache",
]

[tool.hatch.build.targets.wheel]
packages = ["src/git_ai_reporter"]

[dependency-groups]
dev = [
		"allure-pytest-bdd>=2.15.0",
		"allure-pytest>=2.15.0",
		"autopep8>=2.3.2",
		"bandit[baseline,toml,sarif]>=1.8.6",
		"black>=25.1.0",
		"bs4>=0.0.2",
		"flake8-builtins>=3.0.0",
		"flake8>=7.3.0",
		"hypothesis>=6.132.1",
		"isort>=6.0.1",
		"markdown>=3.8.2",
		"mypy-extensions>=1.1.0",
		"mypy>=1.17.1",
		"pycodestyle>=2.14.0",
		"pyflakes>=3.4.0",
		"pylint-htmf>=0.1.1",
		"pylint-plugin-utils>=0.9.0",
		"pylint-pydantic>=0.3.5",
		"pylint>=3.3.7",
		"pyright>=1.1.404",
		"pytest-asyncio>=1.1.0",
		"pytest-bdd>=7.4.0",
		"pytest-check>=2.4.1",
		"pytest-cov>=5.0.0",
		"pytest-random-order>=1.1.2",
		"pytest-recording>=0.13.1",
		"pytest-snapshot>=0.9.0",
		"pytest-sugar>=1.0.0",
		"pytest-timeout>=2.3.2",
		"pytest-xdist>=3.7.0",
		"pytest>=8.4.1",
		"ruff>=0.12.10",
		"twine>=6.1.0",
		"types-aiofiles>=23.10.0.20240106",
		"types-markdown>=3.8.0.20250708",
		"types-python-dateutil>=2.9.0.20250708",
		"types-pyyaml>=6.0.12.20250516",
		"types-regex>=2024.11.6.20250403",
		"types-setuptools>=80.9.0.20250801",
		"typing-extensions>=4.14.1",
		"typing-inspection>=0.4.1",
		"uv>=0.8.4",
		"vulture>=2.14",
]

docs = [
		# MkDocs Core and Material Theme
		"mkdocs>=1.6.1",
		"mkdocs-material[imaging]>=9.6.17",
		# Core Plugins for Required Features
		"mkdocs-same-dir>=0.1.0",
		"mkdocs-badges>=0.4.1",
		"mkdocs-typer>=0.0.3",
		"mkdocstrings[python]>=0.26.2",
		# Git Integration Plugins
		"mkdocs-git-revision-date-localized-plugin>=1.2.9",
		"mkdocs-git-committers-plugin-2>=1.2.3",
		"mkdocs-git-authors-plugin>=0.9.2",
		# Optimization and Enhancement Plugins
		"mkdocs-minify-plugin>=0.8.0",
		"mkdocs-glightbox>=0.4.0",
		"mkdocs-awesome-pages-plugin>=2.9.3",
		"mkdocs-rss-plugin>=1.15.0",
		# Additional Dependencies for Rendering
		"pymdown-extensions>=10.12",
		"pygments>=2.18.0",
		"markdown>=3.7",
		# PDF Generation Support
		"weasyprint>=64.0",
		"cairocffi>=1.7.0",
		# Development Dependencies for MkDocs
		"mike>=2.1.3",
		"mkdocs-redirects>=1.2.2",
]

[tool.mypy]
python_version = "3.12"
mypy_path = "src:stubs"
# Enable strict type checking
strict = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
# Show error codes for easier debugging
show_error_codes = true
# Additional strict options
disallow_untyped_calls = true
disallow_untyped_decorators = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "google.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest_snapshot.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest_check"
ignore_missing_imports = true

[tool.pytest.ini_options]
# Add common pytest command-line options to be used by default
addopts = """
		--cov=src/git_ai_reporter
		--cov-report=term-missing
		--cov-report=html
		--cov-fail-under=55
		-v
		--tb=short
		--strict-markers
		--random-order
		--timeout=15
		--alluredir=allure-results
		--clean-alluredir
		-p no:allure_pytest
		-p no:allure_pytest_bdd
"""
# Set the default timeout for all tests to 15 seconds
timeout = 15
# Configure test discovery to look only in the 'tests' directory
testpaths = ["tests"]
# Filter out common warnings
filterwarnings = ["ignore::DeprecationWarning"]

[tool.hypothesis]
max_examples = 10
deadline = 1000  # 1 second deadline per test case
suppress_health_check = ["too_slow"]

[tool.bandit]
exclude_dirs = [".venv","tests"]
skips = ["B101"]  # Skip assert_used test - allows assert statements in tests
