# SPDX-License-Identifier: MIT
# Copyright (c) 2025 Blackcat InformaticsÂ® Inc.

name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to TestPyPI instead of PyPI'
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  create-release:
    name: Create GitHub Release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_OUTPUT"
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: v${{ steps.version.outputs.VERSION }}
        body: |
          ## What's Changed
          
          For detailed changes, see the [CHANGELOG.txt](https://github.com/paudley/git-ai-reporter/blob/main/CHANGELOG.txt) and [NEWS.md](https://github.com/paudley/git-ai-reporter/blob/main/NEWS.md).
          
          ## Installation
          
          ```bash
          pip install git-ai-reporter==${{ steps.version.outputs.VERSION }}
          ```
          
          ## ðŸ”’ Security
          
          This release includes digital attestations for supply chain security. You can verify package authenticity on the [PyPI project page](https://pypi.org/project/git-ai-reporter/).
        draft: false
        prerelease: false
        generate_release_notes: true

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    permissions:
      contents: read
      attestations: write
      id-token: write
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
    
    - name: Install build dependencies
      run: |
        uv tool install twine
    
    - name: Build package
      run: uv build
    
    - name: Check distribution
      run: uv tool run twine check dist/*
    
    # Note: Package attestations are automatically generated by pypa/gh-action-pypi-publish
    # when using Trusted Publishing. No manual attestation step is needed here.
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        retention-days: 90

  test-pypi:
    name: Publish to TestPyPI
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'true'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/git-ai-reporter
    permissions:
      id-token: write
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
        # attestations: true  # Default: automatically enabled for Trusted Publishing

  pypi:
    name: Publish to PyPI
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi != 'true')
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/git-ai-reporter
    permissions:
      id-token: write
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # with:
      #   attestations: true  # Default: automatically enabled for Trusted Publishing

  verify:
    name: Verify installation
    needs: [pypi]
    if: success()
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12', '3.13']
    
    steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Wait for PyPI to update
      run: sleep 60
    
    - name: Install from PyPI
      run: |
        pip install git-ai-reporter
    
    - name: Verify installation
      run: |
        git-ai-reporter --version
        git-ai-reporter --help