# SPDX-License-Identifier: MIT
# Copyright (c) 2025 Blackcat InformaticsÂ® Inc.

name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to TestPyPI instead of PyPI'
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    permissions:
      contents: read
      attestations: write
      id-token: write
    
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    
    - name: Set up Python
      uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@cc8b0e4e1b85e4ce0a6bbe1a1e0c5db7906a9b1c # v3.2.5
      with:
        enable-cache: true
    
    - name: Install build dependencies
      run: |
        uv tool install build
        uv tool install twine
    
    - name: Build package
      run: uv tool run python -m build
    
    - name: Check distribution
      run: uv tool run twine check dist/*
    
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@1c608d11d69870c2092266b3f9a6ac1a7d5e71dd # v1.4.3
      with:
        subject-path: 'dist/*'
    
    - name: Upload artifacts
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: python-package-distributions
        path: dist/
        retention-days: 90

  test-pypi:
    name: Publish to TestPyPI
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'true'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/git-ai-reporter
    permissions:
      id-token: write
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@15c56dba361d8335944d31a2ecd17d700fc7bcbc # release/v1.12.2
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true

  pypi:
    name: Publish to PyPI
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi != 'true')
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/git-ai-reporter
    permissions:
      id-token: write
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@15c56dba361d8335944d31a2ecd17d700fc7bcbc # release/v1.12.2

  verify:
    name: Verify installation
    needs: [pypi]
    if: success()
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12', '3.13']
    
    steps:
    - name: Set up Python
      uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Wait for PyPI to update
      run: sleep 60
    
    - name: Install from PyPI
      run: |
        pip install git-ai-reporter
    
    - name: Verify installation
      run: |
        git-ai-reporter --version
        git-ai-reporter --help