name: Allure Report

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "allure-report"
  cancel-in-progress: false

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  generate-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    if: github.repository_owner == github.actor || github.event.workflow_run.conclusion == 'success'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      
    - name: Download workflow artifacts
      if: github.event_name == 'workflow_run'
      uses: actions/download-artifact@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
        pattern: allure-results-*
        path: allure-results/
        merge-multiple: true
        
    - name: Setup Python for manual run
      if: github.event_name == 'workflow_dispatch'
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install uv for manual run
      if: github.event_name == 'workflow_dispatch'
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        
    - name: Run tests for manual run
      if: github.event_name == 'workflow_dispatch'
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        uv venv
        uv pip install -e .[dev]
        uv run pytest tests/ --alluredir=allure-results/
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Install Allure
      run: |
        wget https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz
        tar -xzf allure-2.25.0.tgz
        sudo mv allure-2.25.0 /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/bin/allure
        allure --version
        
    - name: Get Allure history
      uses: actions/checkout@v5
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages
        
    - name: Copy Allure history
      if: always()
      run: |
        if [ -d "gh-pages/history" ]; then
          cp -r gh-pages/history allure-results/ || true
        fi
        
    - name: Generate Allure Report
      run: |
        allure generate allure-results/ --output allure-report/ --clean
        echo "## Allure Test Report" > allure-report/README.md
        echo "Test execution results and detailed reporting for Git AI Reporter" >> allure-report/README.md
        echo "Generated on: $(date)" >> allure-report/README.md
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: allure-report/
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Comment PR with Allure Report Link
      if: github.event_name == 'workflow_run' && github.event.workflow_run.event == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: prs } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head: `${context.repo.owner}:${github.event.workflow_run.head_branch}`,
            state: 'open'
          });
          
          if (prs.length > 0) {
            const pr = prs[0];
            const reportUrl = '${{ steps.deployment.outputs.page_url }}';
            const comment = `## 📊 Allure Test Report
            
            Test results are available at: ${reportUrl}
            
            This report includes:
            - ✅ Test execution results
            - 📈 Trends and history
            - 🏷️ Test categorization by features and stories
            - 📝 Detailed test steps and attachments
            - 📊 Coverage and quality metrics
            
            _Report updated on: ${new Date().toISOString()}_`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment
            });
          }