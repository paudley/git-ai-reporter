# =============================================================================
# Python Core
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# =============================================================================
# Distribution / Packaging
# =============================================================================

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# =============================================================================
# Dependency Management
# =============================================================================

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
#.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# =============================================================================
# Virtual Environments
# =============================================================================

.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# =============================================================================
# Testing & Coverage
# =============================================================================

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Allure testing framework
/allure-results
/allure-report

# =============================================================================
# Development Tools & Type Checkers
# =============================================================================

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Ruff
.ruff_cache/

# =============================================================================
# IDEs & Editors
# =============================================================================

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# VS Code
.vscode/
*.code-workspace

# Vim
*.swp
*.swo
.*.swp

# Emacs
\#*\#
.\#*

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# AI/IDE artifacts
.aider*
.claude*
.mcp*
CLAUDE.local.md
CLAUDE.md

# =============================================================================
# Operating Systems
# =============================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
.directory
.Trash-*

# General temp files
*~
*.tmp
*.bak
*.backup
*.old

# =============================================================================
# Documentation
# =============================================================================

# Sphinx documentation
docs/_build/

# mkdocs documentation
/site

# =============================================================================
# Framework-Specific
# =============================================================================

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# PyBuilder
.pybuilder/
target/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Cython debug symbols
cython_debug/

# =============================================================================
# Jupyter & IPython
# =============================================================================

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# =============================================================================
# Localization
# =============================================================================

# Translations
*.mo
*.pot

# =============================================================================
# Project-Specific
# =============================================================================

# Project cache directories
.git-report-cache/
test_cache/
temp_repo_*/

# Generated output files (created by the tool, not source)
NEWS.md
DAILY_UPDATES.md
CHANGELOG.txt

# Test artifacts
tests/cassettes/
tests/snapshots/

# Local configuration
config.yaml
*.local